name: Smart Home Anomaly Detection CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:
    # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov
    
    - name: Create necessary directories
      run: |
        mkdir -p model
        mkdir -p logs
        mkdir -p server/logs
        mkdir -p samples
        mkdir -p test_results
    
    - name: Generate test data
      run: |
        python generate_test_data.py --samples 50
    
    - name: Create sample tests if needed
      run: |
        python run_tests.py --create-tests
    
    - name: Run tests
      run: |
        python run_tests.py --verbose --output-dir test_results
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.python-version }}
        path: test_results/
        retention-days: 7

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pylint
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Lint with pylint
      run: |
        pylint --disable=all --enable=unused-import,undefined-variable,unused-variable,invalid-name,bad-indentation,syntax-error server/

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run setup script
      run: |
        chmod +x setup.sh
        ./setup.sh
    
    - name: Check system
      run: |
        python check_system.py
    
    - name: Create distribution package
      run: |
        pip install build
        python -m build
    
    - name: Upload distribution package
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
        retention-days: 7